# Generated by Django 5.1.1 on 2024-10-03 22:05

import dental_source.utils
import dental_source.validators
import django.db.models.deletion
import django.utils.timezone
import storages.backends.ftp
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdvancedTraining',
            fields=[
                ('id', models.CharField(default=dental_source.utils.generate_uuid, editable=False, max_length=40, primary_key=True, serialize=False, verbose_name='GUID доп. обучения')),
                ('name', models.TextField(help_text='Название доп. обучения', verbose_name='Название доп. обучения')),
                ('year', models.CharField(help_text='Год обучения', max_length=4, verbose_name='Год обучения')),
            ],
            options={
                'verbose_name': 'Дополнительные курсы',
                'verbose_name_plural': 'Дополнительное обучение',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.CharField(default=dental_source.utils.generate_uuid, editable=False, max_length=40, primary_key=True, serialize=False, verbose_name='GUID контакта')),
                ('name', models.CharField(help_text='Название', max_length=40, verbose_name='Название')),
                ('address', models.TextField(help_text='Адрес', verbose_name='Адрес')),
                ('phone', models.CharField(blank=True, max_length=13, null=True, validators=[dental_source.validators.validate_phone], verbose_name='Телефон')),
                ('timeStart', models.TimeField(help_text='Время начала работы', verbose_name='Время начала работы')),
                ('timeEnd', models.TimeField(help_text='Время конца работы', verbose_name='Время конца работы')),
                ('email', dental_source.utils.LowercaseEmailField(error_messages={'unique': 'Значение почты должно быть уникальным.'}, max_length=254, verbose_name='Почта')),
                ('wsLink', models.CharField(blank=True, help_text='Ссылка на ws', max_length=128, verbose_name='Ссылка на ws')),
                ('vkLink', models.CharField(blank=True, help_text='Ссылка на vk', max_length=128, verbose_name='Ссылка на vk')),
                ('tgLink', models.CharField(blank=True, help_text='Ссылка на tg', max_length=128, verbose_name='Ссылка на tg')),
                ('fbLink', models.CharField(blank=True, help_text='Ссылка на fb', max_length=128, verbose_name='Ссылка на fb')),
            ],
            options={
                'verbose_name': 'Контакты',
                'verbose_name_plural': 'Контакт',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.CharField(default=dental_source.utils.generate_uuid, editable=False, max_length=40, primary_key=True, serialize=False, verbose_name='GUID образования')),
                ('name', models.TextField(help_text='Название', verbose_name='Название')),
                ('edStart', models.CharField(help_text='Год начала', max_length=4, verbose_name='Год начала')),
                ('edEnd', models.CharField(help_text='Год конца', max_length=18, verbose_name='Год конца')),
                ('university', models.TextField(help_text='Университет', verbose_name='Университет')),
            ],
            options={
                'verbose_name': 'Образования',
                'verbose_name_plural': 'Образование',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.CharField(default=dental_source.utils.generate_uuid, editable=False, max_length=40, primary_key=True, serialize=False, verbose_name='GUID изображения')),
                ('path', models.ImageField(help_text='Изображение', storage=storages.backends.ftp.FTPStorage(location='ftp://igorjbfz_vladanak:qcZR&vy4@5.101.157.22:21/'), upload_to='media/images/', verbose_name='Изображение')),
                ('isTitle', models.BooleanField(help_text='Титульное изображение', verbose_name='Титульное изображение')),
            ],
            options={
                'verbose_name': 'Изображения',
                'verbose_name_plural': 'Изображения',
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.CharField(default=dental_source.utils.generate_uuid, editable=False, max_length=40, primary_key=True, serialize=False, verbose_name='GUID услуги')),
                ('category', models.CharField(help_text='Категория', max_length=40, verbose_name='Категория')),
                ('name', models.CharField(help_text='Название', max_length=40, verbose_name='Название')),
                ('description', models.TextField(help_text='Описание', verbose_name='Описание')),
                ('price', models.IntegerField(help_text='Цена', verbose_name='Цена')),
            ],
            options={
                'verbose_name': 'Услуги',
                'verbose_name_plural': 'Услуга',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.CharField(default=dental_source.utils.generate_uuid, editable=False, max_length=40, primary_key=True, serialize=False, verbose_name='GUID вопроса')),
                ('question', models.TextField(help_text='Вопрос', verbose_name='Вопрос')),
                ('answer', models.TextField(help_text='Имя', verbose_name='Имя')),
            ],
            options={
                'verbose_name': 'Вопросы',
                'verbose_name_plural': 'Вопрос',
            },
        ),
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.CharField(default=dental_source.utils.generate_uuid, editable=False, max_length=40, primary_key=True, serialize=False, verbose_name='GUID специальности')),
                ('name', models.TextField(help_text='Название', verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Специальности',
                'verbose_name_plural': 'Специальность',
            },
        ),
        migrations.CreateModel(
            name='TreatmentProfile',
            fields=[
                ('id', models.CharField(default=dental_source.utils.generate_uuid, editable=False, max_length=40, primary_key=True, serialize=False, verbose_name='GUID профиля лечения')),
                ('name', models.TextField(help_text='Название профиля', verbose_name='Название профиля')),
                ('percent', models.IntegerField(help_text='Процент', verbose_name='Процент')),
            ],
            options={
                'verbose_name': 'Профили лечения',
                'verbose_name_plural': 'Профиль лечения',
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(default=dental_source.utils.generate_uuid, editable=False, max_length=40, primary_key=True, serialize=False, verbose_name='GUID аккаунта')),
                ('first_name', models.CharField(help_text='Имя', max_length=50, validators=[dental_source.validators.validate_name], verbose_name='Имя')),
                ('last_name', models.CharField(help_text='Фамилия', max_length=50, validators=[dental_source.validators.validate_name], verbose_name='Фамилия')),
                ('middleName', models.CharField(blank=True, help_text='Отчество', max_length=50, null=True, validators=[dental_source.validators.validate_name], verbose_name='Отчество')),
                ('login', models.CharField(db_index=True, error_messages={'unique': 'Значение логина должно быть уникальным.'}, max_length=30, unique=True, validators=[dental_source.validators.validate_login], verbose_name='Логин')),
                ('email', dental_source.utils.LowercaseEmailField(error_messages={'unique': 'Значение почты должно быть уникальным.'}, max_length=254, unique=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=13, null=True, validators=[dental_source.validators.validate_phone], verbose_name='Телефон')),
                ('image_path', models.ImageField(blank=True, help_text='Изображение', null=True, storage=storages.backends.ftp.FTPStorage(location='ftp://igorjbfz_vladanak:qcZR&vy4@5.101.157.22:21/'), upload_to='media/', verbose_name='Изображение')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ('login',),
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.CharField(default=dental_source.utils.generate_uuid, editable=False, max_length=40, primary_key=True, serialize=False, verbose_name='GUID доктора')),
                ('firstName', models.CharField(help_text='Имя', max_length=50, validators=[dental_source.validators.validate_name], verbose_name='Имя')),
                ('lastName', models.CharField(help_text='Фамилия', max_length=50, validators=[dental_source.validators.validate_name], verbose_name='Фамилия')),
                ('middleName', models.CharField(blank=True, help_text='Отчество', max_length=50, null=True, validators=[dental_source.validators.validate_name], verbose_name='Отчество')),
                ('category', models.CharField(help_text='Категория', max_length=40, verbose_name='Категория')),
                ('experienceYears', models.IntegerField(help_text='Лет опыта', verbose_name='Лет опыта')),
                ('lengthInMinutes', models.IntegerField(help_text='Длина в минутах', verbose_name='Длина в минутах')),
                ('rating', models.CharField(help_text='Рейтинг', max_length=5, verbose_name='Рейтинг')),
                ('imgPath', models.ImageField(blank=True, help_text='Изображение', null=True, storage=storages.backends.ftp.FTPStorage(location='ftp://igorjbfz_vladanak:qcZR&vy4@5.101.157.22:21/'), upload_to='media/doctors/', verbose_name='Изображение')),
                ('slug', models.SlugField()),
                ('advancedTraining', models.ManyToManyField(blank=True, help_text='Доп. обучения', related_name='advancedTrainings', to='dental_source.advancedtraining', verbose_name='Доп. обучения')),
                ('education', models.ManyToManyField(blank=True, help_text='Образования', related_name='educations', to='dental_source.education', verbose_name='Образования')),
                ('specialty', models.ManyToManyField(blank=True, help_text='Специальности', related_name='specialties', to='dental_source.specialty', verbose_name='Специальности')),
                ('treatmentProfile', models.ManyToManyField(blank=True, help_text='Профили лечения', related_name='treatmentProfiles', to='dental_source.treatmentprofile', verbose_name='Профили лечения')),
            ],
            options={
                'verbose_name': 'Доктора',
                'verbose_name_plural': 'Доктор',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.CharField(default=dental_source.utils.generate_uuid, editable=False, max_length=40, primary_key=True, serialize=False, verbose_name='GUID встречи')),
                ('appointmentСreation', models.DateTimeField(auto_now_add=True, help_text='Адрес', verbose_name='Адрес')),
                ('appointmentDate', models.DateField(help_text='Дата встречи', verbose_name='Дата встречи')),
                ('appointmentTime', models.TimeField(help_text='Время встречи', verbose_name='Время встречи')),
                ('lengthInMinutes', models.IntegerField(help_text='Длина встречи в минутах', verbose_name='Длина встречи в минутах')),
                ('phone', models.CharField(blank=True, max_length=13, null=True, validators=[dental_source.validators.validate_phone], verbose_name='Телефон')),
                ('patientName', models.CharField(blank=True, help_text='Имя пациента', max_length=128, verbose_name='Имя пациента')),
                ('patientPhone', models.CharField(blank=True, max_length=13, null=True, validators=[dental_source.validators.validate_phone], verbose_name='Телефон пациента')),
                ('patientEmail', models.CharField(verbose_name='Email пациента')),
                ('serviceType', models.TextField(help_text='Услуга', verbose_name='Услуга')),
                ('doctor', models.ForeignKey(help_text='Доктор', on_delete=django.db.models.deletion.CASCADE, to='dental_source.doctor', verbose_name='Доктор')),
            ],
            options={
                'verbose_name': 'Встречи',
                'verbose_name_plural': 'Встреча',
            },
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.CharField(default=dental_source.utils.generate_uuid, editable=False, max_length=40, primary_key=True, serialize=False, verbose_name='GUID случая')),
                ('name', models.TextField(help_text='Название', verbose_name='Название')),
                ('description', models.TextField(help_text='Описание', verbose_name='Описание')),
                ('category', models.CharField(help_text='Категория', max_length=40, verbose_name='Категория')),
                ('totalCost', models.IntegerField(help_text='Полная стоимость', verbose_name='Полная стоимость')),
                ('slug', models.CharField(max_length=100)),
                ('doctor', models.ForeignKey(help_text='Доктор', on_delete=django.db.models.deletion.CASCADE, to='dental_source.doctor', verbose_name='Доктор')),
                ('images', models.ManyToManyField(help_text='Изображения', related_name='images', to='dental_source.image', verbose_name='Изображения')),
                ('price', models.ManyToManyField(help_text='Перечень услуг с ценами', related_name='prices', to='dental_source.price', verbose_name='Перечень услуг с ценами')),
            ],
            options={
                'verbose_name': 'Случаи',
                'verbose_name_plural': 'Случай',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.CharField(default=dental_source.utils.generate_uuid, editable=False, max_length=40, primary_key=True, serialize=False, verbose_name='GUID расписания')),
                ('workStart', models.TimeField(help_text='Время начала работы', verbose_name='Время начала работы')),
                ('workEnd', models.TimeField(help_text='Время конца работы', verbose_name='Время конца работы')),
                ('doctor', models.ForeignKey(help_text='Доктор', on_delete=django.db.models.deletion.CASCADE, to='dental_source.doctor', verbose_name='Доктор')),
            ],
            options={
                'verbose_name': 'Расписания',
                'verbose_name_plural': 'Расписание',
            },
        ),
    ]
