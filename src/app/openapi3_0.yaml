openapi: 3.0.0
info:
  title: Dental Clinic API
  description: API для стоматологической клиники
  version: 1.0.0
servers:
 - url: http://localhost:8080/api/v1
   description: Dev server

paths:
  /doctors:
    get:
      summary: Получить список всех врачей
      tags:
        - Doctors
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Doctor'
    post:
      summary: Добавить нового врача
      tags:
        - Doctors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doctor'
      responses:
        '201':
          description: Врач успешно добавлен
  /doctors/{id}:
    get:
      summary: Получить информацию о враче по ID
      tags:
        - Doctors
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
        '404':
          description: Врач не найден
    put:
      summary: Обновить информацию о враче
      tags:
        - Doctors
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doctor'
      responses:
        '200':
          description: Информация о враче обновлена
        '404':
          description: Врач не найден
    delete:
      summary: Удалить врача по ID
      tags:
        - Doctors
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Врач успешно удален
        '404':
          description: Врач не найден
  /prices:
    get:
      summary: Получить список стоимости всех услуг
      tags:
        - Prices
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Price'
    post:
      summary: Добавить новую услугу
      tags:
        - Prices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Price'
      responses:
        '201':
          description: Услуга успешно добавлена
  /prices/{id}:
    get:
      summary: Получить информацию об услуге по ID
      tags:
        - Prices
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Price'
        '404':
          description: Услуга не найдена
    put:
      summary: Обновить информацию об услуге
      tags:
        - Prices
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Price'
      responses:
        '200':
          description: Информация об услуге обновлена
        '404':
          description: Услуга не найдена
    delete:
      summary: Удалить услугу по ID
      tags:
        - Prices
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Услуга успешно удалена
        '404':
          description: Услуга не найдена
  /cases:
    get:
      summary: Получить список всех кейсов
      tags:
        - Cases
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Case'
    post:
      summary: Добавить новый кейс
      tags:
        - Cases
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Case'
      responses:
        '201':
          description: Кейс успешно добавлен
  /cases/{id}:
    get:
      summary: Получить информацию о кейсе по ID
      tags:
        - Cases
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
        '404':
          description: Кейс не найден
    put:
      summary: Обновить информацию о кейсе
      tags:
        - Cases
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Case'
      responses:
        '200':
          description: Информация о кейсе обновлена
        '404':
          description: Кейс не найден
    delete:
      summary: Удалить кейс по ID
      tags:
        - Cases
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Кейс успешно удален
        '404':
          description: Кейс не найден
  /users:
    get:
      summary: Получить список всех пользователей
      tags:
        - Users
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Добавить нового пользователя
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Пользователь успешно добавлен
  /users/{id}:
    get:
      summary: Получить информацию о пользователе по ID
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Пользователь не найден
    put:
      summary: Обновить информацию о пользователе
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Информация о пользователе обновлена
        '404':
          description: Пользователь не найден
    delete:
      summary: Удалить пользователя по ID
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Пользователь успешно удален
        '404':
          description: Пользователь не найден
  /appointments:
    get:
      summary: Получить список всех записей на прием
      tags:
        - Appointments
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'
    post:
      summary: Создать новую запись на прием
      tags:
        - Appointments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
      responses:
        '201':
          description: Запись успешно создана
  /appointments/{id}:
    get:
      summary: Получить информацию о записи по ID
      tags:
        - Appointments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '404':
          description: Запись не найдена
    put:
      summary: Обновить информацию о записи
      tags:
        - Appointments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
      responses:
        '200':
          description: Информация о записи обновлена
        '404':
          description: Запись не найдена
    delete:
      summary: Удалить запись по ID
      tags:
        - Appointments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Запись успешно удалена
        '404':
          description: Запись не найдена
  /contacts:
    get:
      summary: Получить контактные данные клиники
      tags:
        - Contacts
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contacts'
    post:
      summary: Добавить контактные данные клиники
      tags:
        - Contacts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contacts'
      responses:
        '201':
          description: Контакты успешно добавлены
    put:
      summary: Обновить информацию о контактах
      tags:
        - Contacts
      parameters:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contacts'
      responses:
        '200':
          description: Информация о контактах обновлена
        '404':
          description: Запись не найдена
    delete:
      summary: Удалить контакты 
      tags:
        - Contacts
      parameters:
      responses:
        '204':
          description: Запись успешно удалена
        '404':
          description: Запись не найдена 
  /questions:
    get:
      summary: Получить список всех вопросов
      tags:
        - Questions
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Questions'
    post:
      summary: Добавить новый вопрос
      tags:
        - Questions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Questions'
      responses:
        '201':
          description: Вопрос успешно добавлен
  /question/{id}:
    get:
      summary: Получить информацию о вопросе по ID
      tags:
        - Questions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questions'
        '404':
          description: Вопрос не найден
    put:
      summary: Обновить информацию о вопросе по ID
      tags:
        - Questions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Questions'
      responses:
        '200':
          description: Информация о вопросе удалена
        '404':
          description: Вопрос не найден
    delete:
      summary: Удалить вопрос по ID
      tags:
        - Questions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Вопрос успешно удален
        '404':
          description: Вопрос не найден                     
components:
  schemas:
    Doctor:
      type: object
      properties:
        id:
          type: integer
          example: 1
        firstName:
          type: string
          example: Александр
        lastName:
          type: string
          example: Фроленков
        middleName:
          type: string
          example: Александрович
        category:
          type: string
          example: врач высшей категории 
        experienceYears:
          type: integer
          example: 21  
        specialty:
          type: array
          items:
            $ref: '#/components/schemas/Specialty'
        treatmentProfile:
          type: array
          items:
            $ref: '#/components/schemas/treatmentProfile'
        worktime_start:
          type: integer 
          example: 09:00 
        worktime_end:
          type: integer 
          example: 18:00 
        education:
          type: array
          items:
            $ref: '#/components/schemas/Education'
        advancedTraining:
          type: array
          items:
            $ref: '#/components/schemas/Training'
        sheldue:
          type: array
          items:
            $ref: '#/components/schemas/Sheldue'
        rating:
          type: string
          example: 4.9    
        imgPath:
          type: string
          example: url/assets/images/doctors/doctor:id/picture.png
          description: URL или путь к изображению врача
    Specialty:
      type: object
      properties:
        id: 
          type: integer
          example: 0
        name:
          type: string
          example: гигиенист  
    treatmentProfile:
      type: object
      properties:
        id:
          type: integer
          example: 0
        name: 
          type: string
          example: гиперестезия
        percent:
          type: integer
          example: 14              
    Education:
      type: object
      properties:
        id:
          type: integer
          example: 0
        edStart:
          type: string
          example: 2023
        edEnd:
          type: string
          example: по настоящее время
        name:
          type: string
          example: Стоматология ортопедическая
        university:
          type: string
          example: РНИМУ имени Н. И. Пирогова
    Training:
      type: object
      properties:
        id:
          type: integer
          example: 0
        year:
          type: string
          example: 2015
        name:
          type: string
          example: Ортопедическая стоматология
    Sheldue:
      type: object
      properties:
        date:
          type: string
          format: date
          example: 18.09.2024
        startTime: 
          type: string
          example: 09:00
        endTime: 
          type: string
          example: 19:00     
    Price:
      type: object
      properties:
        id:
          type: integer
          example: 1
        category:
          type: string
          example: Хирургия
        name:
          type: string
          example: Удаление зуба
        description:
          type: string
          example: Извлечение зуба с помощью щипцов
        price:
          type: number
          example: 5000
          format: float
    Case:
      type: object
      properties:
        id:
          type: integer
          example: 0
        category:
          type: string
          example: Имплантология
        images:
          type: array
          items:
            $ref: '#/components/schemas/CasesImages'  
        name:
          type: string
          example: Одномоментная, c удалением зубов, установка дентальных имплантов
        description:
          type: array
          items:
            $ref: '#/components/schemas/CasesDescription'  
        totalCost:
          type: integer
          example: 250000
        priceId:
          type: array
          items:
            $ref: '#/components/schemas/CasesPrices'  
    CasesImages:
      type: object
      properties:
        id: 
          type: integer
          example: 0
        path: 
          type: string
          example: url/assets/images/cases/case:id/picture.png
        isTitle:
          type: boolean
          example: true
          description: по умолчанию false, true в том случае, если ее пометили как "титульная фотография"   
    CasesDescription:
      type: object
      properties:
        introduction:
          type: string
          example: Пришла пациентка А. с жалобами на
        diagnos:
          type: string
          example: На приеме был диагностирован 
        treatment:
          type: string
          example: Зубы 4.4., 4.5 – сформированы полости по
    CasesPrices:
      type: object
      properties:
        id:
          type: integer
          example: 0
        name:
          type: string
          example: Операция на ретинированном/дистопированном зубе 
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        login:
          type: string
          example: Ivanov_ivan@gmail.com 
        password: 
          type: string
          example: cc03e747a6afbbcbf8be7668acfebee5
        first_name:
          type: string
          example: Иван
        last_name:
          type: string
          example: Иванов
        middle_name:
          type: string
          example: Иванович
        email:
          type: string
          example: Ivanov_ivan@gmail.com
        phone:
          type: string
          example: 79930726053
        image_path:
          type: string
          example: url/assets/images/users/user:id/picture.png
          description: URL или путь к изображению пользователя
    Appointment:
      type: object
      properties:
        id:
          type: integer
          example: 1
        Doctor.firstName:
          type: string
          description: Имя врача
          example: Александр
        Doctor.lastName:
          type: string
          example: Фроленков
        Doctor.middleName:
          type: string
          example: Александрович
        appointmentСreation:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentСreation'
          description: Дата и время создания заявки
        appointmentDate:
          type: string
          format: date
          description: Дата приема
        appointmentTime:
          type: string
          example: 09:00
          format: time
          description: Время приема
        patientName:
          type: string
          example: Иван
          description: Имя пациента
        patientPhone:
          type: string
          example: +79930726053
          description: Номер телефона пациента
        patientEmail:
          type: string
          example: Ivanov_ivan@gmail.com
          description: Электронная почта пациента
        serviceType:
          type: string
          example: Консультация первичного пациента с определением плана и стоимости лечения  
    AppointmentСreation:
      type: object
      properties:
        date:
          type: string
          format: date
          example: 19.09.2024
        time: 
          type: string
          format: time
          example: 19:02        
    Contacts:
      type: object
      properties:
        id:
          type: integer
          example: 0
        address: 
          type: string
          example: Москва, Кутузовский пр-кт, 45
        phone:
          type: string
          example:  +74959889939
        timeStart:
          type: string
          example:  10:00
        timeEnd:
          type: string
          example: 22:00
        email:
          type: string
          example: insmileveneers@gmail.com       
    Questions:
      type: object
      properties:
        id:
          type: integer
          example: 0      
        question:
          type: string
          example: Предоставляете ли вы услуги детской стоматологии?
        answer:
          type: string
          example: Да, в нашей клинике есть специалисты по детской стоматологии