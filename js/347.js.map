{"version":3,"file":"js/347.js","mappings":"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","sources":["webpack://dental-blade/./src/pages/admin/ui/admin-questions/index.vue?47ed","webpack://dental-blade/./src/pages/admin/ui/admin-questions/index.vue","webpack://dental-blade/./src/pages/admin/ui/admin-questions/index.vue?2c1f"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createTextVNode as _createTextVNode, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-69280cfe\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"admin-questions\" }\nconst _hoisted_2 = { class: \"admin-header\" }\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", { value: \"\" }, \"все страницы\", -1))\nconst _hoisted_4 = [\"value\"]\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1))\nconst _hoisted_6 = { class: \"questions__content\" }\nconst _hoisted_7 = {\n  key: 0,\n  class: \"questions__add-form\"\n}\nconst _hoisted_8 = { class: \"input-field\" }\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Вопрос:\", -1))\nconst _hoisted_10 = { class: \"input-field\" }\nconst _hoisted_11 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Ответ:\", -1))\nconst _hoisted_12 = { class: \"input-field\" }\nconst _hoisted_13 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Страница:\", -1))\nconst _hoisted_14 = { class: \"form__buttons\" }\nconst _hoisted_15 = { class: \"questions__list\" }\nconst _hoisted_16 = { class: \"item__content\" }\nconst _hoisted_17 = { class: \"item__buttons\" }\nconst _hoisted_18 = [\"onClick\"]\nconst _hoisted_19 = [\"onClick\"]\nconst _hoisted_20 = {\n  key: 0,\n  class: \"questions__edit-form\"\n}\nconst _hoisted_21 = { class: \"input-field\" }\nconst _hoisted_22 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Вопрос:\", -1))\nconst _hoisted_23 = { class: \"input-field\" }\nconst _hoisted_24 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Ответ:\", -1))\nconst _hoisted_25 = { class: \"input-field\" }\nconst _hoisted_26 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Страница:\", -1))\nconst _hoisted_27 = { class: \"form__buttons\" }\n\nimport { ref, onMounted, computed } from 'vue';\r\nimport axios from 'axios';\r\nimport { Questions } from '@/entities/questions/model/question.types';\r\nimport { routes } from '@/app/router/routes';\r\nimport { Button } from '@/shared/ui/button';\r\nimport { Icon } from '@/shared/ui/icons';\r\nimport { Heading } from '@/shared/ui/text/heading';\r\nimport { Paragraph } from '@/shared/ui/text/paragraph';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst questions = ref<Questions[]>([]);\r\nconst selectedSlug = ref('');\r\nconst selectedQuestionId = ref<string | null>(null);\r\nconst answer = ref('');\r\nconst question = ref('');\r\nconst slug = ref('');\r\n\r\nconst getAuthToken = () => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n        console.error('Токен отсутствует');\r\n        return null;\r\n    }\r\n    return token;\r\n};\r\n\r\nconst fetchQuestions = async () => {\r\n    const token = getAuthToken();\r\n    if (!token) {\r\n        console.error('Невозможно получить вопросы, так как отсутствует токен.');\r\n        return;\r\n    }\r\n\r\n    try {\r\n        const response = await axios.get('http://5.35.90.116:8000/questions', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            }\r\n        });\r\n        questions.value = response.data;\r\n    } catch (error) {\r\n        console.error('Ошибка при получении вопросов:', error);\r\n    }\r\n};\r\nconst filteredQuestions = computed(() => {\r\n    return selectedSlug.value\r\n        ? questions.value.filter((question) => question.slug === selectedSlug.value)\r\n        : questions.value;\r\n});\r\n\r\nconst serviceRoutes = computed(() => {\r\n    const homeRoute = routes.find(route => route.path === '/');\r\n    const servicesRoute = routes.find(route => route.path === '/services');\r\n\r\n    const childServiceRoutes = servicesRoute?.children?.filter((childRoute) => childRoute.path !== '') || [];\r\n\r\n    return [\r\n        homeRoute && { name: homeRoute.name, path: homeRoute.path },\r\n        ...childServiceRoutes.map(route => ({ name: route.name, path: `/services/${route.path}` }))\r\n    ].filter(Boolean);\r\n});\r\n\r\nconst editQuestion = (questionItem: Questions) => {\r\n    selectedQuestionId.value = questionItem.id;\r\n    answer.value = questionItem.answer;\r\n    question.value = questionItem.question;\r\n    slug.value = questionItem.slug;\r\n};\r\n\r\nconst cancelEdit = () => {\r\n    selectedQuestionId.value = null;\r\n    answer.value = '';\r\n    question.value = '';\r\n    slug.value = '';\r\n};\r\n\r\nconst saveQuestion = async () => {\r\n    const token = getAuthToken();\r\n    if (!token) {\r\n        console.error('Невозможно сохранить вопрос, так как отсутствует токен.');\r\n        return;\r\n    }\r\n\r\n    const data: Questions = {\r\n        id: selectedQuestionId.value || '',\r\n        answer: answer.value,\r\n        question: question.value,\r\n        slug: slug.value || selectedSlug.value || '',\r\n    };\r\n\r\n    try {\r\n        if (selectedQuestionId.value && selectedQuestionId.value !== 'new') {\r\n            await axios.put(`http://5.35.90.116:8000/questions/${selectedQuestionId.value}`, data, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            });\r\n        } else {\r\n            await axios.post('http://5.35.90.116:8000/questions', data, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            });\r\n        }\r\n        console.log('Данные успешно сохранены');\r\n        await fetchQuestions();\r\n        cancelEdit();\r\n    } catch (error) {\r\n        console.error('Ошибка при сохранении данных:', error);\r\n    }\r\n};\r\n\r\nconst deleteQuestion = async (id: string) => {\r\n    const token = getAuthToken();\r\n    const confirmDelete = window.confirm('Вы уверены, что хотите удалить этот результат?');\r\n    if (!confirmDelete) {\r\n        return;\r\n    }\r\n\r\n    try {\r\n        await axios.delete(`http://5.35.90.116:8000/questions/${id}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            }\r\n        });\r\n        console.log('Вопрос удален');\r\n        await fetchQuestions();\r\n    } catch (error) {\r\n        console.error('Ошибка при удалении вопроса:', error);\r\n    }\r\n};\r\n\r\nconst addNewQuestion = () => {\r\n    selectedQuestionId.value = 'new';\r\n    question.value = '';\r\n    answer.value = '';\r\n    slug.value = selectedSlug.value || '';\r\n}\r\n\r\nonMounted(() => {\r\n    fetchQuestions();\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"section\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_unref(Heading), {\n        tagName: \"h2\",\n        size: \"xl\"\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"часто задаваемые вопросы\")\n        ]),\n        _: 1\n      }),\n      _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((selectedSlug).value = $event)),\n        class: \"slug-select\"\n      }, [\n        _hoisted_3,\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(serviceRoutes.value, (route) => {\n          return (_openBlock(), _createElementBlock(\"option\", {\n            key: route?.path,\n            value: route?.path\n          }, _toDisplayString(route?.name), 9, _hoisted_4))\n        }), 128))\n      ], 512), [\n        [_vModelSelect, selectedSlug.value]\n      ])\n    ]),\n    _hoisted_5,\n    _createElementVNode(\"div\", _hoisted_6, [\n      _createVNode(_unref(Button), {\n        tagName: \"button\",\n        size: \"xs\",\n        color: \"green\",\n        onClick: addNewQuestion,\n        class: \"add-question-btn\"\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\" добавить вопрос \")\n        ]),\n        _: 1\n      }),\n      (selectedQuestionId.value === 'new')\n        ? (_openBlock(), _createElementBlock(\"form\", _hoisted_7, [\n            _createElementVNode(\"div\", _hoisted_8, [\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((question).value = $event)),\n                placeholder: \"Какие услуги предоставляет ваша клиника?\"\n              }, null, 512), [\n                [_vModelText, question.value]\n              ]),\n              _hoisted_9\n            ]),\n            _createElementVNode(\"div\", _hoisted_10, [\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((answer).value = $event)),\n                placeholder: \"Напишите свой ответ здесь\"\n              }, null, 512), [\n                [_vModelText, answer.value]\n              ]),\n              _hoisted_11\n            ]),\n            _createElementVNode(\"div\", _hoisted_12, [\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((slug).value = $event)),\n                placeholder: \"Slug\"\n              }, null, 512), [\n                [_vModelText, slug.value]\n              ]),\n              _hoisted_13\n            ]),\n            _createElementVNode(\"div\", _hoisted_14, [\n              _createVNode(_unref(Button), {\n                tagName: \"button\",\n                size: \"xs\",\n                color: \"green\",\n                onClick: saveQuestion\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_unref(Paragraph), {\n                    tagName: \"span\",\n                    color: \"dark\"\n                  }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\" Сохранить \")\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              }),\n              _createVNode(_unref(Button), {\n                tagName: \"button\",\n                size: \"xs\",\n                color: \"white\",\n                onClick: cancelEdit\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_unref(Paragraph), {\n                    tagName: \"span\",\n                    color: \"dark\"\n                  }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\" Отмена \")\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ])\n          ]))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"ul\", _hoisted_15, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredQuestions.value, (questionItem, index) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: questionItem.id,\n            class: \"item\"\n          }, [\n            _createElementVNode(\"div\", _hoisted_16, [\n              _createVNode(_unref(Paragraph), {\n                tagName: \"p\",\n                size: \"xl\",\n                color: \"dark\",\n                class: \"item__text\"\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(questionItem.question), 1)\n                ]),\n                _: 2\n              }, 1024),\n              _createElementVNode(\"div\", _hoisted_17, [\n                _createElementVNode(\"span\", {\n                  onClick: ($event: any) => (editQuestion(questionItem))\n                }, [\n                  _createVNode(_unref(Icon), {\n                    type: \"edit\",\n                    color: \"dark\"\n                  })\n                ], 8, _hoisted_18),\n                _createElementVNode(\"span\", {\n                  onClick: _withModifiers(($event: any) => (deleteQuestion(questionItem.id)), [\"prevent\"])\n                }, [\n                  _createVNode(_unref(Icon), {\n                    type: \"delete\",\n                    color: \"red\"\n                  })\n                ], 8, _hoisted_19)\n              ])\n            ]),\n            (selectedQuestionId.value === questionItem.id)\n              ? (_openBlock(), _createElementBlock(\"form\", _hoisted_20, [\n                  _createElementVNode(\"div\", _hoisted_21, [\n                    _withDirectives(_createElementVNode(\"input\", {\n                      type: \"text\",\n                      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((question).value = $event)),\n                      placeholder: \"Вопрос\"\n                    }, null, 512), [\n                      [_vModelText, question.value]\n                    ]),\n                    _hoisted_22\n                  ]),\n                  _createElementVNode(\"div\", _hoisted_23, [\n                    _withDirectives(_createElementVNode(\"input\", {\n                      type: \"text\",\n                      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((answer).value = $event)),\n                      placeholder: \"Ответ\"\n                    }, null, 512), [\n                      [_vModelText, answer.value]\n                    ]),\n                    _hoisted_24\n                  ]),\n                  _createElementVNode(\"div\", _hoisted_25, [\n                    _withDirectives(_createElementVNode(\"input\", {\n                      type: \"text\",\n                      \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((slug).value = $event)),\n                      placeholder: \"Slug\"\n                    }, null, 512), [\n                      [_vModelText, slug.value]\n                    ]),\n                    _hoisted_26\n                  ]),\n                  _createElementVNode(\"div\", _hoisted_27, [\n                    _createVNode(_unref(Button), {\n                      tagName: \"button\",\n                      size: \"xs\",\n                      color: \"green\",\n                      onClick: saveQuestion\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_unref(Paragraph), {\n                          tagName: \"span\",\n                          color: \"dark\"\n                        }, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\" Сохранить \")\n                          ]),\n                          _: 1\n                        })\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_unref(Button), {\n                      tagName: \"button\",\n                      size: \"xs\",\n                      color: \"white\",\n                      onClick: cancelEdit\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_unref(Paragraph), {\n                          tagName: \"span\",\n                          color: \"dark\"\n                        }, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\" Отмена \")\n                          ]),\n                          _: 1\n                        })\n                      ]),\n                      _: 1\n                    })\n                  ])\n                ]))\n              : _createCommentVNode(\"\", true)\n          ]))\n        }), 128))\n      ])\n    ])\n  ]))\n}\n}\n\n})","<script setup lang=\"ts\">\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport axios from 'axios';\r\nimport { Questions } from '@/entities/questions/model/question.types';\r\nimport { routes } from '@/app/router/routes';\r\nimport { Button } from '@/shared/ui/button';\r\nimport { Icon } from '@/shared/ui/icons';\r\nimport { Heading } from '@/shared/ui/text/heading';\r\nimport { Paragraph } from '@/shared/ui/text/paragraph';\r\n\r\nconst questions = ref<Questions[]>([]);\r\nconst selectedSlug = ref('');\r\nconst selectedQuestionId = ref<string | null>(null);\r\nconst answer = ref('');\r\nconst question = ref('');\r\nconst slug = ref('');\r\n\r\nconst getAuthToken = () => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n        console.error('Токен отсутствует');\r\n        return null;\r\n    }\r\n    return token;\r\n};\r\n\r\nconst fetchQuestions = async () => {\r\n    const token = getAuthToken();\r\n    if (!token) {\r\n        console.error('Невозможно получить вопросы, так как отсутствует токен.');\r\n        return;\r\n    }\r\n\r\n    try {\r\n        const response = await axios.get('http://5.35.90.116:8000/questions', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            }\r\n        });\r\n        questions.value = response.data;\r\n    } catch (error) {\r\n        console.error('Ошибка при получении вопросов:', error);\r\n    }\r\n};\r\nconst filteredQuestions = computed(() => {\r\n    return selectedSlug.value\r\n        ? questions.value.filter((question) => question.slug === selectedSlug.value)\r\n        : questions.value;\r\n});\r\n\r\nconst serviceRoutes = computed(() => {\r\n    const homeRoute = routes.find(route => route.path === '/');\r\n    const servicesRoute = routes.find(route => route.path === '/services');\r\n\r\n    const childServiceRoutes = servicesRoute?.children?.filter((childRoute) => childRoute.path !== '') || [];\r\n\r\n    return [\r\n        homeRoute && { name: homeRoute.name, path: homeRoute.path },\r\n        ...childServiceRoutes.map(route => ({ name: route.name, path: `/services/${route.path}` }))\r\n    ].filter(Boolean);\r\n});\r\n\r\nconst editQuestion = (questionItem: Questions) => {\r\n    selectedQuestionId.value = questionItem.id;\r\n    answer.value = questionItem.answer;\r\n    question.value = questionItem.question;\r\n    slug.value = questionItem.slug;\r\n};\r\n\r\nconst cancelEdit = () => {\r\n    selectedQuestionId.value = null;\r\n    answer.value = '';\r\n    question.value = '';\r\n    slug.value = '';\r\n};\r\n\r\nconst saveQuestion = async () => {\r\n    const token = getAuthToken();\r\n    if (!token) {\r\n        console.error('Невозможно сохранить вопрос, так как отсутствует токен.');\r\n        return;\r\n    }\r\n\r\n    const data: Questions = {\r\n        id: selectedQuestionId.value || '',\r\n        answer: answer.value,\r\n        question: question.value,\r\n        slug: slug.value || selectedSlug.value || '',\r\n    };\r\n\r\n    try {\r\n        if (selectedQuestionId.value && selectedQuestionId.value !== 'new') {\r\n            await axios.put(`http://5.35.90.116:8000/questions/${selectedQuestionId.value}`, data, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            });\r\n        } else {\r\n            await axios.post('http://5.35.90.116:8000/questions', data, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            });\r\n        }\r\n        console.log('Данные успешно сохранены');\r\n        await fetchQuestions();\r\n        cancelEdit();\r\n    } catch (error) {\r\n        console.error('Ошибка при сохранении данных:', error);\r\n    }\r\n};\r\n\r\nconst deleteQuestion = async (id: string) => {\r\n    const token = getAuthToken();\r\n    const confirmDelete = window.confirm('Вы уверены, что хотите удалить этот результат?');\r\n    if (!confirmDelete) {\r\n        return;\r\n    }\r\n\r\n    try {\r\n        await axios.delete(`http://5.35.90.116:8000/questions/${id}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            }\r\n        });\r\n        console.log('Вопрос удален');\r\n        await fetchQuestions();\r\n    } catch (error) {\r\n        console.error('Ошибка при удалении вопроса:', error);\r\n    }\r\n};\r\n\r\nconst addNewQuestion = () => {\r\n    selectedQuestionId.value = 'new';\r\n    question.value = '';\r\n    answer.value = '';\r\n    slug.value = selectedSlug.value || '';\r\n}\r\n\r\nonMounted(() => {\r\n    fetchQuestions();\r\n});\r\n</script>\r\n\r\n\r\n<template>\r\n    <section class=\"admin-questions\">\r\n        <div class=\"admin-header\">\r\n            <Heading tagName=\"h2\" size=\"xl\">часто задаваемые вопросы</Heading>\r\n            <select v-model=\"selectedSlug\" class=\"slug-select\">\r\n                <option value=\"\">все страницы</option>\r\n                <option v-for=\"route in serviceRoutes\" :key=\"route?.path\" :value=\"route?.path\">{{ route?.name }}</option>\r\n            </select>\r\n        </div>\r\n        <hr>\r\n        <div class=\"questions__content\">\r\n            <Button tagName=\"button\" size=\"xs\" color=\"green\" @click=\"addNewQuestion\" class=\"add-question-btn\">\r\n                добавить вопрос\r\n            </Button>\r\n            <form v-if=\"selectedQuestionId === 'new'\" class=\"questions__add-form\">\r\n                <div class=\"input-field\">\r\n                    <input type=\"text\" v-model=\"question\" placeholder=\"Какие услуги предоставляет ваша клиника?\">\r\n                    <label>Вопрос:</label>\r\n                </div>\r\n                <div class=\"input-field\">\r\n                    <input type=\"text\" v-model=\"answer\" placeholder=\"Напишите свой ответ здесь\">\r\n                    <label>Ответ:</label>\r\n                </div>\r\n                <div class=\"input-field\">\r\n                    <input type=\"text\" v-model=\"slug\" placeholder=\"Slug\">\r\n                    <label>Страница:</label>\r\n                </div>\r\n                <div class=\"form__buttons\">\r\n                    <Button tagName=\"button\" size=\"xs\" color=\"green\" @click=\"saveQuestion\">\r\n                        <Paragraph tagName=\"span\" color=\"dark\">\r\n                            Сохранить\r\n                        </Paragraph>\r\n                    </Button>\r\n                    <Button tagName=\"button\" size=\"xs\" color=\"white\" @click=\"cancelEdit\">\r\n                        <Paragraph tagName=\"span\" color=\"dark\">\r\n                            Отмена\r\n                        </Paragraph>\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n\r\n\r\n            <ul class=\"questions__list\">\r\n                <li v-for=\"(questionItem, index) in filteredQuestions\" :key=\"questionItem.id\" class=\"item\">\r\n                    <div class=\"item__content\">\r\n                        <Paragraph tagName=\"p\" size=\"xl\" color=\"dark\" class=\"item__text\">\r\n                            {{ questionItem.question }}\r\n                        </Paragraph>\r\n                        <div class=\"item__buttons\">\r\n                            <span @click=\"editQuestion(questionItem)\">\r\n                                <Icon type=\"edit\" color=\"dark\" />\r\n                            </span>\r\n                            <span @click.prevent=\"deleteQuestion(questionItem.id)\">\r\n                                <Icon type=\"delete\" color=\"red\" />\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form v-if=\"selectedQuestionId === questionItem.id\" class=\"questions__edit-form\">\r\n                        <div class=\"input-field\">\r\n                            <input type=\"text\" v-model=\"question\" placeholder=\"Вопрос\">\r\n                            <label>Вопрос:</label>\r\n                        </div>\r\n                        <div class=\"input-field\">\r\n                            <input type=\"text\" v-model=\"answer\" placeholder=\"Ответ\">\r\n                            <label>Ответ:</label>\r\n                        </div>\r\n                        <div class=\"input-field\">\r\n                            <input type=\"text\" v-model=\"slug\" placeholder=\"Slug\">\r\n                            <label>Страница:</label>\r\n                        </div>\r\n                        <div class=\"form__buttons\">\r\n                            <Button tagName=\"button\" size=\"xs\" color=\"green\" @click=\"saveQuestion\">\r\n                                <Paragraph tagName=\"span\" color=\"dark\">\r\n                                    Сохранить\r\n                                </Paragraph>\r\n                            </Button>\r\n                            <Button tagName=\"button\" size=\"xs\" color=\"white\" @click=\"cancelEdit\">\r\n                                <Paragraph tagName=\"span\" color=\"dark\">\r\n                                    Отмена\r\n                                </Paragraph>\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n\r\n\r\n<style scoped lang=\"scss\">\r\n.admin-questions {\r\n    hr {\r\n        margin: 32px 0;\r\n        border: none;\r\n        border-top: 1px solid #F1F2F4;\r\n    }\r\n\r\n    .admin-header {\r\n        padding: 0 110px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n\r\n    .questions__content {\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding: 0 110px;\r\n\r\n        .add-question-btn {\r\n            margin-bottom: 50px;\r\n        }\r\n    }\r\n\r\n    .slug-select {\r\n        border: none;\r\n        outline: none;\r\n        font-size: 18px;\r\n        background: none;\r\n        appearance: none;\r\n        cursor: pointer;\r\n    }\r\n\r\n\r\n\r\n    .questions__list {\r\n        .item {\r\n            .item__content {\r\n                display: flex;\r\n                justify-content: space-between;\r\n                align-items: end;\r\n                border-bottom: 1px solid #F1F2F4;\r\n                margin-bottom: 30px;\r\n\r\n                .item__buttons {\r\n                    display: flex;\r\n                    gap: 20px;\r\n\r\n                    span {\r\n                        cursor: pointer;\r\n                        padding: 0 5px;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .questions__edit-form,\r\n    .questions__add-form {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 50px;\r\n        border-left: 1px solid #F1F2F4;\r\n        margin-bottom: 30px;\r\n\r\n        .form__buttons {\r\n            margin-left: 30px;\r\n            display: flex;\r\n            gap: 20px;\r\n        }\r\n\r\n        .input-field {\r\n            display: flex;\r\n            flex-direction: column;\r\n            position: relative;\r\n            gap: 10px;\r\n            margin-left: 30px;\r\n\r\n            input {\r\n                max-width: 500px;\r\n                height: 40px;\r\n                background: transparent;\r\n                border: none;\r\n                outline: none;\r\n                color: #23262F;\r\n                font-size: 20px;\r\n                border-bottom: 1px solid #F1F2F4;\r\n            }\r\n\r\n            label {\r\n                position: absolute;\r\n                top: 50%;\r\n                left: 0;\r\n                transform: translateY(-160%);\r\n                color: #23262F;\r\n                font-size: 14px;\r\n                pointer-events: none;\r\n                transition: 0.3s ease-in;\r\n            }\r\n\r\n        }\r\n\r\n        .input-field input:focus~label,\r\n        .input-field input:valid~label,\r\n        .input-field input:-webkit-autofill~label {\r\n            transform: translateY(-120%);\r\n            font-size: 14px;\r\n            top: 10px;\r\n\r\n        }\r\n\r\n        input:-webkit-autofill,\r\n        input:-webkit-autofill:hover,\r\n        input:-webkit-autofill:focus {\r\n            -webkit-box-shadow: none;\r\n            -webkit-text-fill-color: #23262F;\r\n            transition: background-color 5000s ease-in-out 0s;\r\n            font-size: 16px;\r\n        }\r\n\r\n        .form__buttons {\r\n            .button {\r\n                height: 40px;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n</style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=69280cfe&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-69280cfe\"]])\n\nexport default __exports__"],"names":["_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_hoisted_3","_createElementVNode","value","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","key","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_defineComponent","__name","setup","__props","questions","ref","selectedSlug","selectedQuestionId","answer","question","slug","getAuthToken","token","localStorage","getItem","console","error","fetchQuestions","async","response","axios","get","headers","Authorization","data","filteredQuestions","computed","filter","serviceRoutes","homeRoute","routes","find","route","path","servicesRoute","childServiceRoutes","children","childRoute","name","map","Boolean","editQuestion","questionItem","id","cancelEdit","saveQuestion","put","post","log","deleteQuestion","confirmDelete","window","confirm","delete","addNewQuestion","onMounted","_ctx","_cache","_openBlock","_createElementBlock","_createVNode","_unref","Heading","tagName","size","default","_withCtx","_createTextVNode","_","_withDirectives","$event","_Fragment","_renderList","_toDisplayString","_vModelSelect","Button","color","onClick","type","placeholder","_vModelText","Paragraph","_createCommentVNode","index","Icon","_withModifiers","__exports__"],"sourceRoot":""}