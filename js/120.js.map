{"version":3,"file":"js/120.js","mappings":"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","sources":["webpack://dental-blade/./src/features/breadcrumbs/ui/index.vue?e0bb","webpack://dental-blade/./src/features/breadcrumbs/ui/index.vue","webpack://dental-blade/./src/features/breadcrumbs/ui/index.vue?f38c","webpack://dental-blade/./src/pages/doctors/ui/doctors-view/index.vue?57f1","webpack://dental-blade/./src/pages/doctors/ui/doctors-view/index.vue","webpack://dental-blade/./src/pages/doctors/ui/doctors-view/index.vue?42fc"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createTextVNode as _createTextVNode, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-441424ba\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  key: 0,\n  class: \"breadcrumbs\"\n}\n\nimport { RouterLink } from 'vue-router';\r\nimport { Paragraph } from '@/shared/ui/text/paragraph';\r\nimport { useRoute } from 'vue-router';\r\nimport { computed, ref, watch } from 'vue';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  props: {\r\n    dynamicLabel: {\r\n        type: String,\r\n        default: ''\r\n    }\r\n},\n  setup(__props) {\n\r\nconst props = __props;\r\n\r\nconst route = useRoute();\r\nconst isDataReady = ref(false); // Флаг готовности данных\r\n\r\n// Используем watch для отслеживания изменений маршрута и установки флага\r\nwatch(\r\n    () => route,\r\n    () => {\r\n        isDataReady.value = true; // Устанавливаем флаг в true, когда маршрут изменился\r\n    },\r\n    { immediate: true } // Устанавливаем флаг сразу при инициализации\r\n);\r\n\r\nconst breadcrumbsLinks = computed(() => {\r\n    return route.matched.map((match) => ({\r\n        label: match.meta?.breadcrumb || match.name,\r\n        path: match.path\r\n    }));\r\n});\r\n\r\nconst lastBreadcrumb = computed(() => ({\r\n    label: props.dynamicLabel || breadcrumbsLinks.value[breadcrumbsLinks.value.length - 1].label,\r\n    path: route.fullPath\r\n}));\r\n\r\nconst isChildRoute = computed(() => route.path.split('/').length > 2);\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (isDataReady.value)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createVNode(_unref(RouterLink), {\n          to: \"/\",\n          class: \"breadcrumbs__link\"\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_unref(Paragraph), {\n              tagName: \"span\",\n              size: \"xs\",\n              color: \"dark-gray\",\n              class: \"link__text\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Главная \")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        }),\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(breadcrumbsLinks.value.slice(0, -1), (link, index) => {\n          return (_openBlock(), _createBlock(_unref(RouterLink), {\n            key: index,\n            to: link.path,\n            class: \"breadcrumbs__link\"\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_unref(Paragraph), {\n                tagName: \"span\",\n                size: \"xs\",\n                color: \"dark-gray\",\n                class: \"link__text\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_unref(Paragraph), {\n                    tagName: \"span\",\n                    size: \"xs\",\n                    color: \"dark-gray\",\n                    class: \"link__arrow\"\n                  }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\" › \")\n                    ]),\n                    _: 1\n                  }),\n                  _createTextVNode(\" \" + _toDisplayString(link.label), 1)\n                ]),\n                _: 2\n              }, 1024)\n            ]),\n            _: 2\n          }, 1032, [\"to\"]))\n        }), 128)),\n        (isChildRoute.value)\n          ? (_openBlock(), _createBlock(_unref(RouterLink), {\n              key: 0,\n              to: lastBreadcrumb.value.path,\n              class: \"breadcrumbs__link\"\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_unref(Paragraph), {\n                  tagName: \"span\",\n                  size: \"xs\",\n                  color: \"dark-gray\",\n                  class: \"link__text\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_unref(Paragraph), {\n                      tagName: \"span\",\n                      size: \"xs\",\n                      color: \"dark-gray\",\n                      class: \"link__arrow\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\" › \")\n                      ]),\n                      _: 1\n                    }),\n                    _createTextVNode(\" \" + _toDisplayString(lastBreadcrumb.value.label), 1)\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }, 8, [\"to\"]))\n          : _createCommentVNode(\"\", true)\n      ]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<script setup lang=\"ts\">\r\nimport { RouterLink } from 'vue-router';\r\nimport { Paragraph } from '@/shared/ui/text/paragraph';\r\nimport { useRoute } from 'vue-router';\r\nimport { computed, ref, watch } from 'vue';\r\n\r\nconst props = defineProps({\r\n    dynamicLabel: {\r\n        type: String,\r\n        default: ''\r\n    }\r\n});\r\n\r\nconst route = useRoute();\r\nconst isDataReady = ref(false); // Флаг готовности данных\r\n\r\n// Используем watch для отслеживания изменений маршрута и установки флага\r\nwatch(\r\n    () => route,\r\n    () => {\r\n        isDataReady.value = true; // Устанавливаем флаг в true, когда маршрут изменился\r\n    },\r\n    { immediate: true } // Устанавливаем флаг сразу при инициализации\r\n);\r\n\r\nconst breadcrumbsLinks = computed(() => {\r\n    return route.matched.map((match) => ({\r\n        label: match.meta?.breadcrumb || match.name,\r\n        path: match.path\r\n    }));\r\n});\r\n\r\nconst lastBreadcrumb = computed(() => ({\r\n    label: props.dynamicLabel || breadcrumbsLinks.value[breadcrumbsLinks.value.length - 1].label,\r\n    path: route.fullPath\r\n}));\r\n\r\nconst isChildRoute = computed(() => route.path.split('/').length > 2);\r\n</script>\r\n\r\n<template>\r\n    <div v-if=\"isDataReady\" class=\"breadcrumbs\">\r\n        <RouterLink to=\"/\" class=\"breadcrumbs__link\">\r\n            <Paragraph tagName=\"span\" size=\"xs\" color=\"dark-gray\" class=\"link__text\">\r\n                Главная\r\n            </Paragraph>\r\n        </RouterLink>\r\n        <RouterLink v-for=\"(link, index) in breadcrumbsLinks.slice(0, -1)\" :key=\"index\" :to=\"link.path\"\r\n            class=\"breadcrumbs__link\">\r\n            <Paragraph tagName=\"span\" size=\"xs\" color=\"dark-gray\" class=\"link__text\">\r\n                <Paragraph tagName=\"span\" size=\"xs\" color=\"dark-gray\" class=\"link__arrow\">\r\n                    &#8250;\r\n                </Paragraph>\r\n                {{ link.label }}\r\n            </Paragraph>\r\n        </RouterLink>\r\n        <RouterLink v-if=\"isChildRoute\" :to=\"lastBreadcrumb.path\" class=\"breadcrumbs__link\">\r\n            <Paragraph tagName=\"span\" size=\"xs\" color=\"dark-gray\" class=\"link__text\">\r\n                <Paragraph tagName=\"span\" size=\"xs\" color=\"dark-gray\" class=\"link__arrow\">\r\n                    &#8250;\r\n                </Paragraph>\r\n                {{ lastBreadcrumb.label }}\r\n            </Paragraph>\r\n        </RouterLink>\r\n    </div>\r\n</template>\r\n\r\n<style scoped lang=\"scss\">\r\n@import './style.scss';\r\n</style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=441424ba&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-441424ba\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { Header } from '@/widgets/header';\r\nimport { Container } from '@/shared/ui/container';\r\nimport { Breadcrumbs } from '@/features/breadcrumbs';\r\nimport { Map } from '@/widgets/map';\r\nimport { Footer } from '@/widgets/footer';\r\n\r\nimport { useStore } from 'vuex';\r\nimport { computed } from 'vue';\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst doctorsData = computed(() => store.getters['doctors/formattedDoctors']);\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_unref(Header)),\n    _createVNode(_unref(Container), null, {\n      default: _withCtx(() => [\n        _createVNode(_unref(Breadcrumbs), {\n          dynamicLabel: doctorsData.value?.fullName\n        }, null, 8, [\"dynamicLabel\"]),\n        _createVNode(_component_router_view)\n      ]),\n      _: 1\n    }),\n    _createVNode(_unref(Map)),\n    _createVNode(_unref(Footer))\n  ], 64))\n}\n}\n\n})","<script setup lang=\"ts\">\r\nimport { Header } from '@/widgets/header';\r\nimport { Container } from '@/shared/ui/container';\r\nimport { Breadcrumbs } from '@/features/breadcrumbs';\r\nimport { Map } from '@/widgets/map';\r\nimport { Footer } from '@/widgets/footer';\r\n\r\nimport { useStore } from 'vuex';\r\nimport { computed } from 'vue';\r\nconst store = useStore();\r\nconst doctorsData = computed(() => store.getters['doctors/formattedDoctors']);\r\n</script>\r\n<template>\r\n    <Header />\r\n    <Container>\r\n        <Breadcrumbs :dynamicLabel=\"doctorsData?.fullName\" />\r\n        <router-view />\r\n    </Container>\r\n    <Map />\r\n    <Footer />\r\n</template>","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_hoisted_1","key","class","_defineComponent","__name","props","dynamicLabel","type","String","default","setup","__props","route","useRoute","isDataReady","ref","watch","value","immediate","breadcrumbsLinks","computed","matched","map","match","label","meta","breadcrumb","name","path","lastBreadcrumb","length","fullPath","isChildRoute","split","_ctx","_cache","_openBlock","_createElementBlock","_createVNode","_unref","RouterLink","to","_withCtx","Paragraph","tagName","size","color","_createTextVNode","_","_Fragment","_renderList","slice","link","index","_createBlock","_toDisplayString","_createCommentVNode","__exports__","store","useStore","doctorsData","getters","_component_router_view","_resolveComponent","Header","Container","Breadcrumbs","fullName","Map","Footer"],"sourceRoot":""}